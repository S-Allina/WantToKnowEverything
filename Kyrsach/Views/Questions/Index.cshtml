@model Kyrsach.Models.Question

@{
    ViewData["Title"] = "Index";
   
}
<div class="contener">
@if(Model ==null){
    @if (User.IsInRole("admin")|| (User.IsInRole("teacher") && ViewBag.isThisUserCreated==true))
    {
       
        <a class="btn" asp-action="Create" asp-route-idT="@ViewBag.idT">
                <strong>Добавить</strong>
                <div id="container-stars">
                    <div id="stars"></div>
                </div>

                <div id="glow">
                    <div class="circle"></div>
                    <div class="circle"></div>
                </div>
        </a>
    }
    <div style="width:100%;height:50vh; display:flex; justify-content:center; align-items:center">Вопросы ещё не добавлены. Обратитесь к преподавателю.</div>
}else{

<h1>@await Component.InvokeAsync("Count", new {idT = Model.IdTest, idQ=Model.IdQuestion})</h1>

        @if (User.IsInRole("admin") || (User.IsInRole("teacher") && ViewBag.isThisUserCreated == true))
        {  <div class="CreateCategoryButtons">
            <a class="btn" asp-action="Create" asp-route-idT="@ViewBag.idT">
                    <strong>Добавить</strong>
                    <div id="container-stars">
                        <div id="stars"></div>
                    </div>

                    <div id="glow">
                        <div class="circle"></div>
                        <div class="circle"></div>
                    </div>
            </a>

            <a class="btn delete" asp-action="Delete" id="deleteQuestion" asp-route-idT="@ViewBag.idT" asp-route-id="@Model.IdQuestion">
                    <strong>Удалить</strong>
                    <div id="container-stars">
                        <div id="stars"></div>
                    </div>
                    
                    <div id="glow">
                        <div class="circle"></div>
                        <div class="circle"></div>
                    </div>
            </a>
        </div>
    }
   
    <form class="formCreate" style="height:fit-content" asp-action="Dalee" asp-controller="Questions">
    <input name="idQ" class="none" value="@Model.IdQuestion" />
    <input value="@Model.IdTest" name="idT" class="none" />
    <span class="spanQuestion1 question"><b>Вопрос:</b> @Html.DisplayFor(modelItem => Model.TextQuetion)</span>
        <div class="QuestionImeges">
            <div class="QuestionText">
            @if (Model.Option2 != null)
                {
                    <div class="create-options">
                    @if (Model.Option1 != null)
                        {
                            <div class="aa">
                                <label class="container">
                                    <input type="checkbox" id="11" onchange="copyInputValue(1, 11)">
                                    <div class="checkmark"></div>
                                </label>
                            <span class="spanQuestion1" id="1">@Html.DisplayFor(modelItem => Model.Option1)</span>
                            </div>
                        }
                    @if (Model.Option2 != null)
                        {
                            <div class="aa">
                                <label class="container">
                                    <input type="checkbox" id="22" onchange="copyInputValue(2, 22)">
                                    <div class="checkmark"></div>
                                </label>
                            <span class="spanQuestion1" id="2">@Html.DisplayFor(modelItem => Model.Option2)</span>
                            </div>
                        }
                    @if (Model.Option3 != null)
                        {
                            <div class="aa">
                                <label class="container">
                                    <input type="checkbox" id="33" onchange="copyInputValue(3, 33)">
                                    <div class="checkmark"></div>
                                </label>
                            <span class="spanQuestion1" id="3">@Html.DisplayFor(modelItem => Model.Option3)</span>
                            </div>
                        }
                    @if (Model.Option4 != null)
                        {
                            <div class="aa">
                                <label class="container">
                                    <input type="checkbox" id="44" onchange="copyInputValue(4, 44)">
                                    <div class="checkmark"></div>
                                </label>
                            <span class="spanQuestion1" id="4">@Html.DisplayFor(modelItem => Model.Option4)</span>
                            </div>
                        }
                    @if (Model.Option5 != null)
                        {
                            <div class="aa">
                                <label class="container">
                                    <input type="checkbox" id="55" onchange="copyInputValue(5, 55)">
                                    <div class="checkmark"></div>
                                </label>
                                <span class="spanQuestion1" id="5">@Html.DisplayFor(modelItem => Model.Option5)</span>
                            </div>
                        }

                    </div>
                    <input name="answer" type="text" class="none" id="CorrectAnswer" />
                }
                else
                {
                    <div class="create-Nooptions" id="create-Nooptions">
                        <div class="inputbox">
                            <input minlength="1" maxlength="15" name="answer" required autocomplete="off" id="Answ" type="text">
                            <span>Ответ:</span>
                            <i></i>
                        </div>
                    </div>
                }
            </div>

            <div class="questionImg">
            @if (Model.PictureTest != null)
                {
                    <div class="cardQuestion">
                        <div class="circleQuestion"></div>
                        <div class="circleQuestion"></div>
                        <div class="card-innerQuestion">
                        <img src="data:image/png;base64,@(Convert.ToBase64String(Model.PictureTest))" class="imgQuestion" />
                        </div>
                    </div>
                }
                else
                {

                    <img class="imgleft" src="~/img/questionleft.png">
                    <img class="imgcenter" src="~/img/question.png">
                    <img class="imgright" src="~/img/questionright.png">

                }
            </div>

        </div>
        <span class="text-danger">@ViewBag.Message</span>

        <button type="submit" name="button" class="btn">
            <strong>@ViewBag.Button</strong>
            <div id="container-stars">
                <div id="stars"></div>
            </div>

            <div id="glow">
                <div class="circle"></div>
                <div class="circle"></div>
            </div>
        </button>


    </form>
    @*<a asp-action="Index" class="formCreate" asp-route-answer="@Request.Form["value"]" asp-route-answer="answer" asp-route-idQ="@item.IdQuestion" asp-route-idT="@item.IdTest">Далее</a>*@
}

</div>
@*<script src="~/js/ShowMessage.js"></script>*@
<script src="~/js/question.js"></script>
<script>
    //document.querySelector("#deleteQuestion").addEventListener('click',()=>{
    //    alert("Вопрос будет удалён");
    //})

    //document.querySelectorAll(".delete").forEach((value) => {
    //    value.addEventListener('click', () => {
    //        event.preventDefault();

    //        // Подтверждение удаления
    //        const confirmation = confirm("Вы точно хотите удалить данную запись?");

    //        if (confirmation) {
    //            // Переход по ссылке
    //            window.location.href = value.href;
    //        } else {
    //            // Отмена перехода
    //            //event.stopPropagation();
    //        }
    //    })
    //})
</script>



